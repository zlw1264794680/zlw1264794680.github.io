import{_ as e,o as p,c as t,d as s}from"./chunks/framework.4d89205b.js";const a=JSON.parse('{"title":"2. 快速搭建 RN 开发环境","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/react/react-native/01.RN快速入门/2.快速搭建RN开发环境.md"}'),n={name:"front-end/react/react-native/01.RN快速入门/2.快速搭建RN开发环境.md"},o=[s('<h1 id="_2-快速搭建-rn-开发环境" tabindex="-1">2. 快速搭建 <em>RN</em> 开发环境 <a class="header-anchor" href="#_2-快速搭建-rn-开发环境" aria-label="Permalink to &quot;2. 快速搭建 *RN* 开发环境&quot;">​</a></h1><p>要进行 <em>RN</em> 的开发，首先第一步是搭建其开发环境。</p><p>官网为我们提供了搭建开发环境的详细步骤：<em><a href="https://reactnative.dev/docs/environment-setup" target="_blank" rel="noreferrer">https://reactnative.dev/docs/environment-setup</a></em></p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-070930.png" alt="image-20220602150930027"></p><p>其中给了我们两个选择：</p><ul><li><p>如果是作为学习阶段，想要快速体验 <em>RN</em> 开发，那么可以直接使用简易沙盒环境</p></li><li><p>如果是要做完整的上线应用开发，那么可以搭建完整的原生环境</p></li></ul><p>这里我不希望大家一开始就在搭建环境这件事上消耗太多精力，因此我们先使用简易的沙盒环境，以便于能够快速进入到 <em>RN</em> 的开发学习。</p><blockquote><p>沙盒（英语：sandbox，又译为沙箱），计算机术语，在计算机安全领域中是一种安全机制，为运行中的程序提供的隔离环境。通常是作为一些来源不可信、具破坏力或无法判定程序意图的程序提供实验之用。 沙盒通常严格控制其中的程序所能访问的资源，比如，沙盒可以提供用后即回收的磁盘及内存空间。在沙盒中，网络访问、对真实系统的访问、对输入设备的读取通常被禁止或是严格限制。从这个角度来说，沙盒属于虚拟化的一种。 沙盒中的所有改动对操作系统不会造成任何损失。通常，这种技术被计算机技术人员广泛用于测试可能带毒的程序或是其他的恶意代码。</p></blockquote><p>首先第一步，我们需要安装 <em>expo-cli</em>，这是一个脚手架工具，可以帮助我们快速搭建一个 <em>RN</em> 的项目。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g expo</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">cli</span></span>\n<span class="line"></span></code></pre></div><p>安装完毕后可以使用 <em>expo -V</em> 来查看所安装的脚手架版本</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-070951.png" alt="image-20220602150951138" style="zoom:50%;"><p>接下来我们就可以快速拉取一个项目，使用命令 <em>expo init &lt;项目名称&gt;</em></p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-071014.png" alt="image-20220602151013904"></p><p>首先会让我们选择项目的模板，如果不用 <em>TypeScript</em> 的话，一般选择第一个即可。</p><blockquote><p>注：使用 <em>expo-cli</em> 拉取项目时，很多依赖需要搭梯子才能安装，请自行搞定科学上网。</p></blockquote><p>在科学上网的环境下，拉取项目还是比较快的，项目拉取完成图如下：</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-071035.png" alt="image-20220602151034878"></p><p>接下来 <em>cd</em> 到项目里面，使用 <em>npm start</em> 启动项目即可。</p><p>启动效果如下图所示，会有一个二维码，至此我们的 <em>RN</em> 开发环境已经搭建完毕。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-071052.png" alt="image-20220602151051871" style="zoom:50%;"><p>接下来需要搞定 <em>RN</em> 项目的预览环境。以前写 <em>PC</em> 网页的时候，电脑上的浏览器就是我们的预览环境，而现在我们使用 <em>RN</em> 开发的是移动端应用，因此自然预览环境使用的是我们的手机。</p><p>除此之外，我们需要在手机上安装一个 <em>expo-client</em> 应用。</p><p>你可以在<a href="https://expo.dev/tools" target="_blank" rel="noreferrer">这里</a>根据你的手机系统版本下载对应的 <em>Client</em> 的文件。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-071125.png" alt="image-20220602151125112" style="zoom:50%;"><p>之后在手机上进行安装，安装完毕后确保手机和电脑是连接的同一个网络，打开该应用，点击 <em>Scan QR code</em> 进行扫码。</p><blockquote><p>如果是苹果手机，直接使用自带的相机应用进行扫码。</p></blockquote><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-071151.png" alt="image-20220602151150979" style="zoom:50%;"><p>扫码后会进入到项目打包构建过程，之后就会显示出当前项目的效果。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-06-02-071211.png" alt="image-20220602151210602" style="zoom:50%;"><p>至此，我们就快速的利用 <em>expo</em> 沙盒环境搭建了一个 <em>RN</em> 项目，并在手机上安装了 <em>expo-client</em> 来预览项目效果。</p><hr><p>-<em>EOF</em>-</p>',33)];const m=e(n,[["render",function(e,s,a,n,m,c){return p(),t("div",null,o)}]]);export{a as __pageData,m as default};
