import{_ as e,o as t,c as a,d as i}from"./chunks/framework.ad53f7b3.js";const m=JSON.parse('{"title":"通过 React Native CLI 搭建环境","description":"","frontmatter":{},"headers":[{"level":2,"title":"React Native CLI 搭建开发环境","slug":"react-native-cli-搭建开发环境","link":"#react-native-cli-搭建开发环境","children":[{"level":3,"title":"安装 JDK","slug":"安装-jdk","link":"#安装-jdk","children":[]},{"level":3,"title":"Android 开发环境","slug":"android-开发环境","link":"#android-开发环境","children":[]},{"level":3,"title":"创建新项目","slug":"创建新项目","link":"#创建新项目","children":[]}]},{"level":2,"title":"目录分析","slug":"目录分析","link":"#目录分析","children":[]}],"relativePath":"front-end/react/react-native/09. 常见问题/通过 React Native CLI 搭建环境.md"}'),o={name:"front-end/react/react-native/09. 常见问题/通过 React Native CLI 搭建环境.md"},r=[i('<h1 id="通过-react-native-cli-搭建环境" tabindex="-1">通过 <em>React Native CLI</em> 搭建环境 <a class="header-anchor" href="#通过-react-native-cli-搭建环境" aria-label="Permalink to &quot;通过 *React Native CLI* 搭建环境&quot;">​</a></h1><p>目前为止，我们都是通过 <em>expo</em> 来快速的搭建 <em>RN</em> 的学习开发环境，</p><p>但是正如官方文档所说，如果你是作为学习，那么可以使用 <em>expo</em> 来快速的体验 <em>RN</em>，但是如果是要开发正式的项目，那么官方还是推荐使用 <em>React Native CLI</em> 来搭建完整的项目，里面的各种配置也会更加完整一些。</p><p>这里，我们就来跟着官方文档的步骤，使用 <em>React Native CLI</em> 搭建正式项目的开发环境。</p><p>本文主要包含以下内容：</p><ul><li><em>React Native CLI</em> 搭建开发环境</li><li>目录分析</li></ul><h2 id="react-native-cli-搭建开发环境" tabindex="-1"><em>React Native CLI</em> 搭建开发环境 <a class="header-anchor" href="#react-native-cli-搭建开发环境" aria-label="Permalink to &quot;*React Native CLI* 搭建开发环境&quot;">​</a></h2><blockquote><p>备注 1: 在开始之前，还是再次强调，请自行解决科学上网的问题，很多依赖都需要科学上网的环境下才能下载</p></blockquote><blockquote><p>备注 2: 如果是 <em>macOS</em> 系统电脑，可以搭建 <em>iOS</em> 和 <em>Andriod</em> 的环境，但是如果 <em>Windows</em> 系统电脑，只能搭建 <em>Andriod</em> 的环境。</p></blockquote><blockquote><p>备注 3: 本次演示步骤示例，<em>Development OS</em> 为 <em>macOS</em>，<em>target</em> 为 <em>Andriod</em></p></blockquote><p>接下来，我们就根据官方的步骤，一步一步来操作。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-025820.png" alt="image-20220720105820154"></p><p>首先整体的依赖有：</p><ul><li><em>Node</em></li><li><em>Watchman</em></li><li><em>React Native command line interface</em></li><li><em>JDK</em></li><li><em>Android Studio</em></li></ul><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-025840.png" alt="image-20220720105840341"></p><p><em>Node</em> 大家已经很熟悉了，而且大家都已经安装了，官方还推荐了一个叫做 <em>watchman</em> 的工作，根据官方的描述“<em>Watchman</em> 是 <em>Facebook</em> 的一个工具，用于观察文件系统的变化。强烈建议您安装它以获得更好的性能。”</p><p>这里在安装的时候，还是推荐大家使用 <em>Homebrew</em> 来进行安装，安装过程中如果遇到 <em>fatal: not in a git directory</em> 错误，可以参阅：<em><a href="https://blog.csdn.net/Wbl752134268/article/details/125186635" target="_blank" rel="noreferrer">https://blog.csdn.net/Wbl752134268/article/details/125186635</a></em></p><p>安装完毕后可以通过 <em>watchman -v</em> 命令来查看版本，如下：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-025900.png" alt="image-20220720105900213" style="zoom:50%;"><blockquote><p>如果在安装 <em>Homebrew</em> 时遇到问题，可以尝试使用国内镜像安装，命令为： /bin/zsh -c &quot;$(curl -fsSL <a href="https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh" target="_blank" rel="noreferrer">https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh</a>)&quot;</p></blockquote><h3 id="安装-jdk" tabindex="-1">安装 <em>JDK</em> <a class="header-anchor" href="#安装-jdk" aria-label="Permalink to &quot;安装 *JDK*&quot;">​</a></h3><p>搭建 <em>Android</em> 开发环境需要 <em>Java</em> 环境的支持，因此需要下载和安装操作系统对应的 <em>JDK</em> 版本。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-025931.png" alt="image-20220720105931006"></p><p>官方推荐使用 <em>Homebrew</em> 来进行安装，当然你也可以选择直接去 <a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer"><em>Java</em> 的官网</a>下载安装。</p><p>关于 <em>JDK</em> 的安装，你可以在网上轻松的找到详细的说明，这里不再赘述。</p><blockquote><p><em>macOS</em> 安装：<em><a href="https://www.jianshu.com/p/199cd1abd570" target="_blank" rel="noreferrer">https://www.jianshu.com/p/199cd1abd570</a></em><em>Windows</em> 安装：<em><a href="https://www.cnblogs.com/maoning/p/10701349.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/maoning/p/10701349.html</a></em></p></blockquote><p>最后输入 <em>javac -version</em> 能查看版本号，例如：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-025950.png" alt="image-20220720105950341" style="zoom:50%;"><h3 id="android-开发环境" tabindex="-1"><em>Android</em> 开发环境 <a class="header-anchor" href="#android-开发环境" aria-label="Permalink to &quot;*Android* 开发环境&quot;">​</a></h3><p>如果你之前没有接触过 <em>Android</em> 的开发环境，那么请做好心理准备，这一过程相当繁琐。</p><p>首先下载安装 <a href="https://developer.android.google.cn/studio/" target="_blank" rel="noreferrer"><em>Andriod Studio</em></a></p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030051.png" alt="image-20220720110051649"></p><p>点击官网的下载，可能出现无法下载的情况，将下载地址的 <em>https</em> 协议修改为 <em>http</em> 即可。</p><p>安装好 <em>Andriod Studio</em> 后，接下来需要安装 <em>Android SDK</em>，根据官网的描述，目前编译 <em>React Native</em> 应用需要的是 <em>Android 11 (R)</em> 版本的 <em>SDK</em>，可以在 <em>Android Studio</em> 的 <em>SDK Manager</em> 中选择安装各版本的 <em>SDK</em>。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030113.png" alt="image-20220720110112615"></p><p>根据官网下方的描述，安装对应的 <em>SDK</em> 工具：</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030130.png" alt="image-20220720110130176"></p><p>根据官网的描述，接下来我们需要安装上图中框选的组件，但是第一次是无法选择的，因为没有选择 <em>Android SDK</em> 的 <em>Location</em>，点击右侧的 <em>Edit</em>，先安装一个默认的 <em>Android SDK</em> 版本，目前默认的是 <em>Andriod API 33</em>，展开 <em>Android 11 (R)</em>，勾选上图中框选的组件</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030148.png" alt="image-20220720110148405"></p><p>点击&quot;SDK Tools&quot;选项卡，同样勾中右下角的&quot;Show Package Details&quot;。展开&quot;Android SDK Build-Tools&quot;选项，确保选中了 React Native 所必须的30.0.2版本。你可以同时安装多个其他版本。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030206.png" alt="image-20220720110205934"></p><p>在&quot;SDK Tools&quot;选项卡，点击&quot;NDK (Side by side)&quot;，同样勾中右下角的&quot;Show Package Details&quot;，选择20.1.5948944版本。最后再勾选上&quot;Android SDK Command-line Tools (latest)&quot;。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030223.png" alt="image-20220720110222974"></p><p>最后点击 <em>Apply</em> 来下载安装这些组件。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030247.png" alt="image-20220720110247857"></p><p>接下来需要配置 <em>ANDROID_SDK_ROOT</em> 环境变量</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030303.png" alt="image-20220720110302867"></p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030321.png" alt="image-20220720110321356" style="zoom:50%;"><p>通过 <em>vi ~/.zshrc</em> 来打开这个配置文件（没有会自动新建），然后按 <em>i</em> 键进入 <em>insert</em> 模式，粘贴上面的配置，然后按 <em>Esc</em> 键退出编辑模式，之后 :wq 保存退出</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030349.png" alt="image-20220720110348986"></p><p>接下来就是让上面的配置生效，按照官网的步骤操作即可：</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030404.png" alt="image-20220720110404020" style="zoom:50%;"><h3 id="创建新项目" tabindex="-1">创建新项目 <a class="header-anchor" href="#创建新项目" aria-label="Permalink to &quot;创建新项目&quot;">​</a></h3><p>接下来我们通过 <em>npx react-native init &lt;项目名&gt;</em> 来创建新的项目</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030425.png" alt="image-20220720110425193" style="zoom:67%;"><p>接下来我们需要准备预览环境，你可以准备真机，也可以用模拟器。</p><p>真机首先第一步需要开启 USB 调试，不同的机器开启方式不一样，例如小米手机可以参阅如下文档：</p><p><em><a href="https://jingyan.baidu.com/article/f71d60379ad6065bb641d1ac.html" target="_blank" rel="noreferrer">https://jingyan.baidu.com/article/f71d60379ad6065bb641d1ac.html</a></em></p><p>接下来进入【开发者选项】，打开如下的开关</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-062040.png" alt="image-20220720142040143" style="zoom:50%;"><blockquote><p>连接之前，要确保手机和电脑在同一个网络里面，否则无法连接上 <em>Metro</em> 服务器</p></blockquote><p>接下来执行 <em>npx react-native run-android</em> 命令来启动整个项目</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030449.png" alt="image-20220720110448705"></p><p>此时会启动一个 <em>Metro</em> 服务器，该服务器类似于 <em>webpack</em> 中的 <em>webpack-dev-server</em>，能够实现代码热更新的效果。</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030505.png" alt="image-20220720110504925"></p><h2 id="目录分析" tabindex="-1">目录分析 <a class="header-anchor" href="#目录分析" aria-label="Permalink to &quot;目录分析&quot;">​</a></h2><p>接下来我们来分析一下使用 <em>React Native CLI</em> 所搭建的项目的目录结构。</p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2022-07-20-030525.png" alt="image-20220720110524782" style="zoom:50%;"><p><em>React Native</em> 工程的目录和文件说明如下表：</p><table><thead><tr><th>目录文件</th><th>说明</th></tr></thead><tbody><tr><td>_<em>test</em>_</td><td>React Native工程单元测试文件夹</td></tr><tr><td>android</td><td>原生Android工程文件夹</td></tr><tr><td>ios</td><td>原生iOS工程文件夹</td></tr><tr><td>node_modules</td><td>React Native工程依赖的第三方库</td></tr><tr><td>index.js</td><td>React Native工程入口文件</td></tr><tr><td>package.json</td><td>React Native工程配置文件</td></tr></tbody></table><p>当然，在整个搭建项目的途中，我也踩了很多坑，并且这些坑根据你不同的操作系统，以及搭建的不同的目标环境会有所不同，这里有两篇汇总，记录如下：</p><p><em><a href="https://blog.csdn.net/weixin_40466351/article/details/125078877" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_40466351/article/details/125078877</a></em></p><p><em><a href="https://blog.csdn.net/weixin_44058725/article/details/116146452" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_44058725/article/details/116146452</a></em></p><p>-<em>EOF</em>-</p>',74)];const n=e(o,[["render",function(e,i,m,o,n,c){return t(),a("div",null,r)}]]);export{m as __pageData,n as default};
