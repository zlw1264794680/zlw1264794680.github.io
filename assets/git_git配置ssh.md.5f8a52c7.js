import{_ as s,o as a,c as l,d as e}from"./chunks/framework.ad53f7b3.js";const n=JSON.parse('{"title":"git配置ssh","description":"","frontmatter":{},"headers":[{"level":2,"title":"git config --global xxx","slug":"git-config-global-xxx","link":"#git-config-global-xxx","children":[]},{"level":2,"title":"执行生成公钥和私钥的命令","slug":"执行生成公钥和私钥的命令","link":"#执行生成公钥和私钥的命令","children":[]},{"level":2,"title":"执行查看公钥的命令","slug":"执行查看公钥的命令","link":"#执行查看公钥的命令","children":[]},{"level":2,"title":"仓库配置","slug":"仓库配置","link":"#仓库配置","children":[]}],"relativePath":"git/git配置ssh.md"}'),o={name:"git/git配置ssh.md"},t=[e('<h1 id="git配置ssh" tabindex="-1">git配置ssh <a class="header-anchor" href="#git配置ssh" aria-label="Permalink to &quot;git配置ssh&quot;">​</a></h1><p>当https拉取仓库的方式，太慢时，可以配置ssh，进行拉取。</p><h2 id="git-config-global-xxx" tabindex="-1">git config --global xxx <a class="header-anchor" href="#git-config-global-xxx" aria-label="Permalink to &quot;git config --global xxx&quot;">​</a></h2><p>打开 <code>git bash</code>，分别执行以下两句命令：用户名和邮箱，尽量与仓库的保持一致。（用户名是可以随便起的，邮箱就尽量保持一致）</p><p>通过 <code>git config --list</code>查看配置信息。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">“用户名”</span></span>\n<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.email</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">“邮箱”</span></span>\n<span class="line"></span></code></pre></div><h2 id="执行生成公钥和私钥的命令" tabindex="-1">执行生成公钥和私钥的命令 <a class="header-anchor" href="#执行生成公钥和私钥的命令" aria-label="Permalink to &quot;执行生成公钥和私钥的命令&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 执行命令后，一直按回车到生成</span></span>\n<span class="line"><span style="color:#FFCB6B;">ssh-keygen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa</span></span>\n<span class="line"></span></code></pre></div><h2 id="执行查看公钥的命令" tabindex="-1">执行查看公钥的命令 <a class="header-anchor" href="#执行查看公钥的命令" aria-label="Permalink to &quot;执行查看公钥的命令&quot;">​</a></h2><p><code>.ssh</code> 如果不做特殊处理的话，<code>window</code>下，一般是在<code>C:\\Users\\Administrator</code>目录下。如果看不到<code>.ssh</code>文件，可以使用<code>ls -ah</code>指令查看隐藏文件夹即可，这是存放秘钥的文件，打开这个文件会看到<code>id_rsa</code>和<code>id_rsa.pub</code>。<code>id_rsa</code> 是私钥文件，<code>id_rsa.pub</code>是公钥文件。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ssh/id_rsa.pub</span></span>\n<span class="line"></span></code></pre></div><h2 id="仓库配置" tabindex="-1">仓库配置 <a class="header-anchor" href="#仓库配置" aria-label="Permalink to &quot;仓库配置&quot;">​</a></h2><p>在仓库设置上，将公钥信息配置到ssh即可</p>',13)];const c=s(o,[["render",function(s,e,n,o,c,i){return a(),l("div",null,t)}]]);export{n as __pageData,c as default};
